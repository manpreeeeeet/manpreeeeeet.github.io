---
interface Props {
    title: string;
    techUsed: string[];
    links?: ILinks[];
}

interface ILinks {
    name: string;
    url: string;
    openLinkInNewTab?: boolean;
}

const {techUsed, links, title} = Astro.props;
---

<style>
    .project-card {
        display: flex;
        flex-direction: column;
        border: 1px solid var(--underline);
        border-radius: 10px;
        padding: 20px;
        font-size: 1rem;
    }

    h4 {
        margin-top: 0;
    }

    .tech-used {
        display: flex;
        gap: 0.5em;
        font-size: 0.8em;
    }

    p {
        margin-top: 10px;
        font-size: 0.8em;
    }

    .links {
        margin-top: 1em;
        display: flex;
        gap: 0.5em;
    }

    .links a {
        border: 1px solid var(--underline);
        padding: 10px;
        min-width: 5em;
        text-align: center;
    }

    .links a:hover {
        background-color: var(--button);
        color: var(--text-light);
        cursor: pointer;
    }

    a, a:visited, a:hover, a:active {
        color: inherit;
        text-decoration: none;
    }

</style>

<div class="project-card">
    <h4>{title}</h4>
    <div class="tech-used">
        {techUsed?.map((tech, index) => {
            if (index == techUsed.length - 1) {
                return (
                        <div>{tech}</div>)
            } else {
                return (
                        <div>{tech}</div>
                        <div>|</div>
                )
            }
        })}
    </div>
    <p>
        <slot name="description"/>
    </p>
    <div class="links">
        {links?.map((link) => {
            return (<a href={link.url} target={link.openLinkInNewTab ? "_blank" : "_self"}>{link.name}</a>)
        })}
    </div>
</div>
